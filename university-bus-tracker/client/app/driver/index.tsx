import {
  Text,
  View,
  useColorScheme,
  ScrollView,
  TouchableOpacity,
} from "react-native";
import { styles } from "../theme/driver_theme/index";
export default function Index() {
  const colorScheme = useColorScheme();
  const isDark = colorScheme === "dark";

  const features = [
    {
      id: "1",
      icon: "üöå",
      title: "‡∏Å‡∏≤‡∏£‡∏Ç‡∏±‡∏ö‡∏Ç‡∏µ‡πà",
      subtitle: "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£",
      description: "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô",
      steps: ["‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ", "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå", "‡∏£‡∏≠‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö"],
    },
    {
      id: "2",
      icon: "üì±",
      title: "‡∏™‡πÅ‡∏Å‡∏ô QR Code",
      subtitle: "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏π‡πâ‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏£",
      description: "‡∏™‡πÅ‡∏Å‡∏ô‡∏£‡∏´‡∏±‡∏™ QR ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏ú‡∏π‡πâ‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏£",
      steps: ["‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏™‡πÅ‡∏Å‡∏ô", "‡∏ä‡∏µ‡πâ‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà QR Code", "‡∏£‡∏≠‡∏£‡∏∞‡∏ö‡∏ö‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô"],
    },
    {
      id: "3",
      icon: "üìã",
      title: "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå",
      subtitle: "‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏",
      description: "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£",
      steps: ["‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå", "‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î", "‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô"],
    },
    {
      id: "4",
      icon: "üë§",
      title: "‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå",
      subtitle: "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß",
      description: "‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
      steps: ["‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå", "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á"],
    },
  ];

  const tips = [
    {
      icon: "üí°",
      title: "‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢",
      description: "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏†‡∏≤‡∏û‡∏£‡∏ñ‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏≠‡∏Å‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á",
    },
    {
      icon: "‚è∞",
      title: "‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏•‡∏≤",
      description: "‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î",
    },
    {
      icon: "üéØ",
      title: "‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ",
      description: "‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û",
    },
    {
      icon: "ü§ù",
      title: "‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤",
      description: "‡∏¢‡∏¥‡πâ‡∏°‡πÅ‡∏¢‡πâ‡∏°‡πÅ‡∏à‡πà‡∏°‡πÉ‡∏™‡πÅ‡∏•‡∏∞‡πÉ‡∏™‡πà‡πÉ‡∏à‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏ú‡∏π‡πâ‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏£",
    },
  ];

  return (
    <View
      style={[
        styles.container,
        { backgroundColor: isDark ? "#0f172a" : "#f8fafc" },
      ]}
    >
      <ScrollView
        style={styles.scrollView}
        contentContainerStyle={styles.scrollContent}
        showsVerticalScrollIndicator={false}
      >
        {/* Header */}
        <View style={styles.header}>
          <Text
            style={[
              styles.welcomeText,
              { color: isDark ? "#9ca3af" : "#64748b" },
            ]}
          >
            ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà
          </Text>
          <Text
            style={[styles.title, { color: isDark ? "#60a5fa" : "#1e40af" }]}
          >
            üöå Driver App
          </Text>
          <Text
            style={[styles.subtitle, { color: isDark ? "#d1d5db" : "#374151" }]}
          >
            ‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö‡∏£‡∏ñ‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ó‡∏≤‡∏á
          </Text>
        </View>

        {/* Quick Start Guide */}
        <View
          style={[
            styles.quickStartCard,
            {
              backgroundColor: isDark ? "#1f2937" : "#ffffff",
              borderColor: isDark ? "#374151" : "#e2e8f0",
            },
          ]}
        >
          <Text
            style={[
              styles.sectionTitle,
              { color: isDark ? "#f3f4f6" : "#1e293b" },
            ]}
          >
            üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
          </Text>
          <Text
            style={[
              styles.sectionSubtitle,
              { color: isDark ? "#9ca3af" : "#64748b" },
            ]}
          >
            ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏≠‡∏õ
          </Text>

          <View style={styles.stepsContainer}>
            {[
              "‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ",
              "‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö",
              "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå",
              "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô",
            ].map((step, index) => (
              <View key={index} style={styles.stepItem}>
                <View
                  style={[
                    styles.stepNumber,
                    { backgroundColor: isDark ? "#3b82f6" : "#1e40af" },
                  ]}
                >
                  <Text style={styles.stepNumberText}>{index + 1}</Text>
                </View>
                <Text
                  style={[
                    styles.stepText,
                    { color: isDark ? "#d1d5db" : "#374151" },
                  ]}
                >
                  {step}
                </Text>
              </View>
            ))}
          </View>
        </View>

        {/* Features Section */}
        <View style={styles.featuresSection}>
          <Text
            style={[
              styles.sectionTitle,
              { color: isDark ? "#f3f4f6" : "#1e293b" },
            ]}
          >
            üìö ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
          </Text>

          <View style={styles.featuresGrid}>
            {features.map((feature) => (
              <TouchableOpacity
                key={feature.id}
                style={[
                  styles.featureCard,
                  {
                    backgroundColor: isDark ? "#1f2937" : "#ffffff",
                    borderColor: isDark ? "#374151" : "#e2e8f0",
                  },
                ]}
                activeOpacity={0.8}
              >
                <Text style={styles.featureIcon}>{feature.icon}</Text>
                <Text
                  style={[
                    styles.featureTitle,
                    { color: isDark ? "#f3f4f6" : "#1e293b" },
                  ]}
                >
                  {feature.title}
                </Text>
                <Text
                  style={[
                    styles.featureSubtitle,
                    { color: isDark ? "#60a5fa" : "#3b82f6" },
                  ]}
                >
                  {feature.subtitle}
                </Text>
                <Text
                  style={[
                    styles.featureDescription,
                    { color: isDark ? "#9ca3af" : "#64748b" },
                  ]}
                >
                  {feature.description}
                </Text>

                <View style={styles.stepsPreview}>
                  {feature.steps.map((step, index) => (
                    <View key={index} style={styles.stepPreviewItem}>
                      <View
                        style={[
                          styles.stepDot,
                          { backgroundColor: isDark ? "#4b5563" : "#d1d5db" },
                        ]}
                      />
                      <Text
                        style={[
                          styles.stepPreviewText,
                          { color: isDark ? "#9ca3af" : "#6b7280" },
                        ]}
                      >
                        {step}
                      </Text>
                    </View>
                  ))}
                </View>
              </TouchableOpacity>
            ))}
          </View>
        </View>

        {/* Tips Section */}
        <View
          style={[
            styles.tipsSection,
            {
              backgroundColor: isDark ? "#1f2937" : "#ffffff",
              borderColor: isDark ? "#374151" : "#e2e8f0",
            },
          ]}
        >
          <Text
            style={[
              styles.sectionTitle,
              { color: isDark ? "#f3f4f6" : "#1e293b" },
            ]}
          >
            üí° ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
          </Text>

          <View style={styles.tipsGrid}>
            {tips.map((tip, index) => (
              <View
                key={index}
                style={[
                  styles.tipCard,
                  {
                    backgroundColor: isDark ? "#111827" : "#f8fafc",
                    borderColor: isDark ? "#374151" : "#e5e7eb",
                  },
                ]}
              >
                <Text style={styles.tipIcon}>{tip.icon}</Text>
                <View style={styles.tipContent}>
                  <Text
                    style={[
                      styles.tipTitle,
                      { color: isDark ? "#f3f4f6" : "#1e293b" },
                    ]}
                  >
                    {tip.title}
                  </Text>
                  <Text
                    style={[
                      styles.tipDescription,
                      { color: isDark ? "#9ca3af" : "#64748b" },
                    ]}
                  >
                    {tip.description}
                  </Text>
                </View>
              </View>
            ))}
          </View>
        </View>

        {/* Contact Section */}
        <View
          style={[
            styles.contactSection,
            {
              backgroundColor: isDark ? "#1e3a8a" : "#eff6ff",
              borderColor: isDark ? "#3b82f6" : "#dbeafe",
            },
          ]}
        >
          <Text style={styles.contactIcon}>üìû</Text>
          <Text
            style={[
              styles.contactTitle,
              { color: isDark ? "#dbeafe" : "#1e40af" },
            ]}
          >
            ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠?
          </Text>
          <Text
            style={[
              styles.contactDescription,
              { color: isDark ? "#bfdbfe" : "#3b82f6" },
            ]}
          >
            ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ù‡πà‡∏≤‡∏¢‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡πÑ‡∏î‡πâ 24/7
          </Text>
          <Text
            style={[
              styles.contactNumber,
              { color: isDark ? "#93c5fd" : "#1d4ed8" },
            ]}
          >
            üì± 02-XXX-XXXX
          </Text>
        </View>

        {/* Status Indicator */}
        <View
          style={[
            styles.statusCard,
            {
              backgroundColor: isDark ? "#065f46" : "#d1fae5",
              borderColor: isDark ? "#10b981" : "#a7f3d0",
            },
          ]}
        >
          <View style={styles.statusIndicator}>
            <View style={[styles.statusDot, { backgroundColor: "#10b981" }]} />
            <Text
              style={[
                styles.statusText,
                { color: isDark ? "#6ee7b7" : "#047857" },
              ]}
            >
              System Online - ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£
            </Text>
          </View>
          <Text
            style={[
              styles.statusSubtext,
              { color: isDark ? "#86efac" : "#059669" },
            ]}
          >
            ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: {new Date().toLocaleTimeString("th-TH")}
          </Text>
        </View>
      </ScrollView>
    </View>
  );
}
