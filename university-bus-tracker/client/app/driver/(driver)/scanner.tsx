import {
  Text,
  View,
  Platform,
  Alert,
  useColorScheme,
  TouchableOpacity,
} from "react-native";
import { CameraView, useCameraPermissions } from "expo-camera";
import { useState } from "react";
import styles from "../../theme/driver_theme/scanner";

export default function Scanner() {
  const [permission, requestPermission] = useCameraPermissions();
  const [scanned, setScanned] = useState(false);

  const colorScheme = useColorScheme();
  const isDark = colorScheme === "dark";

  const handleBarCodeScanned = ({
    type,
    data,
  }: {
    type: string;
    data: string;
  }) => {
    setScanned(true);
    Alert.alert("QR Code ‡∏™‡πÅ‡∏Å‡∏ô‡πÅ‡∏•‡πâ‡∏ß! üéâ", `‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ${data}`, [
      {
        text: "‡∏™‡πÅ‡∏Å‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á",
        onPress: () => setScanned(false),
      },
    ]);
  };

  // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô Web
  if (Platform.OS === "web") {
    return (
      <View
        style={[
          styles.container,
          { backgroundColor: isDark ? "#0f172a" : "#ffffff" },
        ]}
      >
        <View style={styles.messageContainer}>
          <View
            style={[
              styles.iconContainer,
              { backgroundColor: isDark ? "#1f2937" : "#f1f5f9" },
            ]}
          >
            <Text style={styles.mobileIcon}>üì±</Text>
          </View>
          <Text
            style={[
              styles.messageTitle,
              { color: isDark ? "#60a5fa" : "#1e40af" },
            ]}
          >
            ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏à‡∏≤‡∏Å‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠
          </Text>
          <Text
            style={[
              styles.messageSubtitle,
              { color: isDark ? "#9ca3af" : "#64748b" },
            ]}
          >
            QR Code Scanner ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ö‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
          </Text>
          <View
            style={[
              styles.featureList,
              {
                backgroundColor: isDark ? "#1f2937" : "#f8fafc",
                borderColor: isDark ? "#374151" : "#e2e8f0",
              },
            ]}
          >
            <Text
              style={[
                styles.featureTitle,
                { color: isDark ? "#f3f4f6" : "#1e293b" },
              ]}
            >
              ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö:
            </Text>
            <Text
              style={[
                styles.featureItem,
                { color: isDark ? "#d1d5db" : "#475569" },
              ]}
            >
              ‚úì ‡∏™‡πÅ‡∏Å‡∏ô QR Code ‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß
            </Text>
            <Text
              style={[
                styles.featureItem,
                { color: isDark ? "#d1d5db" : "#475569" },
              ]}
            >
              ‚úì ‡∏™‡πÅ‡∏Å‡∏ô Barcode ‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö
            </Text>
            <Text
              style={[
                styles.featureItem,
                { color: isDark ? "#d1d5db" : "#475569" },
              ]}
            >
              ‚úì ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏ö‡∏ö Real-time
            </Text>
          </View>
        </View>
      </View>
    );
  }

  // ‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡∏•‡πâ‡∏≠‡∏á
  if (!permission) {
    return (
      <View
        style={[
          styles.container,
          { backgroundColor: isDark ? "#0f172a" : "#ffffff" },
        ]}
      >
        <View style={styles.messageContainer}>
          <View
            style={[
              styles.loadingContainer,
              { backgroundColor: isDark ? "#1f2937" : "#f1f5f9" },
            ]}
          >
            <Text style={styles.loadingIcon}>üîÑ</Text>
            <Text
              style={[
                styles.loadingText,
                { color: isDark ? "#60a5fa" : "#1e40af" },
              ]}
            >
              ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏•‡πâ‡∏≠‡∏á...
            </Text>
            <Text
              style={[
                styles.loadingSubtext,
                { color: isDark ? "#9ca3af" : "#64748b" },
              ]}
            >
              ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà
            </Text>
          </View>
        </View>
      </View>
    );
  }

  // ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏•‡πâ‡∏≠‡∏á
  if (!permission.granted) {
    return (
      <View
        style={[
          styles.container,
          { backgroundColor: isDark ? "#0f172a" : "#ffffff" },
        ]}
      >
        <View style={styles.messageContainer}>
          <View
            style={[
              styles.iconContainer,
              { backgroundColor: isDark ? "#1f2937" : "#fef2f2" },
            ]}
          >
            <Text style={styles.errorIcon}>üì∑</Text>
          </View>
          <Text
            style={[
              styles.messageTitle,
              { color: isDark ? "#fca5a5" : "#dc2626" },
            ]}
          >
            ‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏Å‡∏•‡πâ‡∏≠‡∏á
          </Text>
          <Text
            style={[
              styles.messageSubtitle,
              { color: isDark ? "#9ca3af" : "#64748b" },
            ]}
          >
            ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πÅ‡∏Å‡∏ô QR Code
          </Text>

          <TouchableOpacity
            style={[
              styles.permissionButton,
              { backgroundColor: isDark ? "#3b82f6" : "#1e40af" },
            ]}
            onPress={requestPermission}
            activeOpacity={0.8}
          >
            <Text style={styles.permissionButtonIcon}>üîê</Text>
            <Text style={styles.permissionButtonText}>
              ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á
            </Text>
          </TouchableOpacity>

          <View
            style={[
              styles.instructionCard,
              {
                backgroundColor: isDark ? "#1f2937" : "#f8fafc",
                borderColor: isDark ? "#374151" : "#e2e8f0",
              },
            ]}
          >
            <Text
              style={[
                styles.instructionTitle,
                { color: isDark ? "#f3f4f6" : "#1e293b" },
              ]}
            >
              ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÑ‡∏î‡πâ:
            </Text>
            <Text
              style={[
                styles.instructionStep,
                { color: isDark ? "#d1d5db" : "#475569" },
              ]}
            >
              1. ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏õ
            </Text>
            <Text
              style={[
                styles.instructionStep,
                { color: isDark ? "#d1d5db" : "#475569" },
              ]}
            >
              2. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å &quot;‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå&quot; ‡∏´‡∏£‡∏∑‡∏≠ &quot;Permissions&quot;
            </Text>
            <Text
              style={[
                styles.instructionStep,
                { color: isDark ? "#d1d5db" : "#475569" },
              ]}
            >
              3. ‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏Å‡∏•‡πâ‡∏≠‡∏á
            </Text>
            <Text
              style={[
                styles.instructionStep,
                { color: isDark ? "#d1d5db" : "#475569" },
              ]}
            >
              4. ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏≠‡∏õ‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä
            </Text>
          </View>
        </View>
      </View>
    );
  }

  // ‡πÅ‡∏™‡∏î‡∏á Scanner
  return (
    <View
      style={[
        styles.container,
        { backgroundColor: isDark ? "#0f172a" : "#ffffff" },
      ]}
    >
      <View
        style={[
          styles.header,
          { backgroundColor: isDark ? "#1e3a8a" : "#1e40af" },
        ]}
      >
        <Text style={styles.headerTitle}>üì± ‡∏™‡πÅ‡∏Å‡∏ô QR Code</Text>
        <Text
          style={[
            styles.headerSubtitle,
            { color: isDark ? "#dbeafe" : "#bfdbfe" },
          ]}
        >
          ‡∏ß‡∏≤‡∏á QR Code ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏Å‡∏£‡∏≠‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πÅ‡∏Å‡∏ô
        </Text>
        <View style={styles.headerStats}>
          <View style={styles.statItem}>
            <Text style={styles.statIcon}>‚ö°</Text>
            <Text style={styles.statLabel}>‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß</Text>
          </View>
          <View style={styles.statItem}>
            <Text style={styles.statIcon}>üéØ</Text>
            <Text style={styles.statLabel}>‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥</Text>
          </View>
          <View style={styles.statItem}>
            <Text style={styles.statIcon}>üîí</Text>
            <Text style={styles.statLabel}>‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢</Text>
          </View>
        </View>
      </View>

      <View
        style={[
          styles.cameraContainer,
          { backgroundColor: isDark ? "#1f2937" : "#f1f5f9" },
        ]}
      >
        <CameraView
          style={styles.camera}
          facing="back"
          onBarcodeScanned={scanned ? undefined : handleBarCodeScanned}
          barcodeScannerSettings={{
            barcodeTypes: [
              "qr",
              "pdf417",
              "aztec",
              "ean13",
              "ean8",
              "upc_e",
              "code128",
              "code39",
            ],
          }}
        >
          <View style={styles.overlay}>
            <View style={styles.scanArea}>
              <View
                style={[
                  styles.corner,
                  styles.topLeft,
                  { borderColor: isDark ? "#60a5fa" : "#3b82f6" },
                ]}
              />
              <View
                style={[
                  styles.corner,
                  styles.topRight,
                  { borderColor: isDark ? "#60a5fa" : "#3b82f6" },
                ]}
              />
              <View
                style={[
                  styles.corner,
                  styles.bottomLeft,
                  { borderColor: isDark ? "#60a5fa" : "#3b82f6" },
                ]}
              />
              <View
                style={[
                  styles.corner,
                  styles.bottomRight,
                  { borderColor: isDark ? "#60a5fa" : "#3b82f6" },
                ]}
              />

              {/* Scanning Line Animation */}
              <View
                style={[
                  styles.scanLine,
                  { backgroundColor: isDark ? "#60a5fa" : "#3b82f6" },
                ]}
              />
            </View>

            {/* Instructions */}
            <View style={styles.instructionsContainer}>
              <Text style={styles.instructionText}>
                üìã ‡∏ß‡∏≤‡∏á‡∏£‡∏´‡∏±‡∏™ QR ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏Å‡∏£‡∏≠‡∏ö‡∏™‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°
              </Text>
            </View>
          </View>
        </CameraView>
      </View>

      {scanned ? (
        <TouchableOpacity
          style={[
            styles.scanButton,
            { backgroundColor: isDark ? "#3b82f6" : "#1e40af" },
          ]}
          onPress={() => setScanned(false)}
          activeOpacity={0.8}
        >
          <Text style={styles.scanButtonIcon}>üîÑ</Text>
          <Text style={styles.scanButtonText}>‡πÅ‡∏ï‡∏∞‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πÅ‡∏Å‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á</Text>
        </TouchableOpacity>
      ) : (
        <View
          style={[
            styles.statusBar,
            {
              backgroundColor: isDark ? "#1f2937" : "#f8fafc",
              borderTopColor: isDark ? "#374151" : "#e2e8f0",
            },
          ]}
        >
          <View style={styles.statusItem}>
            <Text
              style={[
                styles.statusDot,
                { color: "#10b981" }, // Green for active
              ]}
            >
              ‚óè
            </Text>
            <Text
              style={[
                styles.statusText,
                { color: isDark ? "#f3f4f6" : "#1e293b" },
              ]}
            >
              ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡πÅ‡∏Å‡∏ô
            </Text>
          </View>
          <Text
            style={[
              styles.statusHint,
              { color: isDark ? "#9ca3af" : "#64748b" },
            ]}
          >
            ‡∏ä‡∏µ‡πâ‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà QR Code
          </Text>
        </View>
      )}
    </View>
  );
}
